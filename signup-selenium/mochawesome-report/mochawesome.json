{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 9,
    "pending": 0,
    "failures": 3,
    "start": "2025-06-26T13:25:43.227Z",
    "end": "2025-06-26T13:26:19.431Z",
    "duration": 36204,
    "testsRegistered": 12,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1e9af83f-eacb-4315-badb-10c74cbdd1ef",
      "title": "",
      "fullFile": "C:\\Automation\\signup-selenium\\tests\\signUp.tests.js",
      "file": "\\tests\\signUp.tests.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "303ee45e-3da7-442a-886d-c2842d34039b",
          "title": "Sign-up page",
          "fullFile": "C:\\Automation\\signup-selenium\\tests\\signUp.tests.js",
          "file": "\\tests\\signUp.tests.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Sign-up page\"",
              "fullTitle": "Sign-up page \"before all\" hook in \"Sign-up page\"",
              "timedOut": false,
              "duration": 2719,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const browser = process.env.BROWSER || Browser.CHROME;\ndriver = await new Builder().forBrowser(browser).build();\npage   = new SignUpPage(driver);",
              "err": {},
              "uuid": "df1cfcd4-ed70-450a-a18d-d6775b91411c",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Sign-up page\"",
              "fullTitle": "Sign-up page \"before each\" hook in \"Sign-up page\"",
              "timedOut": false,
              "duration": 409,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "page.open()",
              "err": {},
              "uuid": "34dfa932-8fdc-4263-a724-6a2cf500dc0f",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Sign-up page\"",
              "fullTitle": "Sign-up page \"after all\" hook in \"Sign-up page\"",
              "timedOut": false,
              "duration": 61,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver && driver.quit()",
              "err": {},
              "uuid": "5fd9d8b5-0c16-48e2-9248-df59522fb2fd",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "TC-01 – happy path (mandatory only)",
              "fullTitle": "Sign-up page TC-01 – happy path (mandatory only)",
              "timedOut": false,
              "duration": 443,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await page.fillMandatory(buildBaseData());\nconst firstField = page.firstName;          // element before refresh\nawait page.submit();\nawait driver.wait(until.stalenessOf(firstField), 10_000);\nexpect(await page.firstName.getAttribute('value')).to.equal('');",
              "err": {
                "message": "UnexpectedAlertOpenError: unexpected alert open: {Alert text : LinkedIn must be filled out}\n  (Session info: chrome=137.0.7151.120)",
                "estack": "UnexpectedAlertOpenError: unexpected alert open: {Alert text : LinkedIn must be filled out}\n  (Session info: chrome=137.0.7151.120)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:523:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:524:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:456:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)",
                "diff": null
              },
              "uuid": "9f70d228-66b2-4b5e-bdc7-440cf4d78ce4",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-02 – happy path (all fields)",
              "fullTitle": "Sign-up page TC-02 – happy path (all fields)",
              "timedOut": false,
              "duration": 1329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await page.fillAll(buildBaseData());\nconst firstField = page.firstName;\nawait page.submit();\nawait driver.wait(until.stalenessOf(firstField), 10_000);\nexpect(await page.firstName.getAttribute('value')).to.equal('');",
              "err": {},
              "uuid": "8551f522-ceff-4a44-bc43-abac94eb911d",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-03 – First name missing",
              "fullTitle": "Sign-up page TC-03 – First name missing",
              "timedOut": false,
              "duration": 638,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* ---------- data ---------- */\nlet data = tc.mutate ? tc.mutate(buildBaseData()) : buildBaseData();\n/* ---------- populate form ---------- */\nif (tc.id === 7) {\n  await page.fillMandatory({ ...data, pw: 'Qwerty#123' });\n  await page.confirmPassword.clear();\n} else if (tc.id === 9) {\n  await page.fillMandatory({ ...data, pw: data.pw });\n  await page.confirmPassword.clear();\n  await page.confirmPassword.sendKeys('Qwerty#124');\n} else if (tc.id < 8) {\n  await page.fillMandatory(data);\n} else {\n  await page.fillAll(data);\n}\nawait page.submit();\n/* ---------- capture validation ---------- */\nlet errorText = '';\ntry {\n  // A) JavaScript alert\n  await driver.wait(until.alertIsPresent(), 2_000);\n  const alertBox = await driver.switchTo().alert();\n  errorText = (await alertBox.getText()).toLowerCase();\n  await alertBox.accept();\n} catch {\n  try {\n    // B) inline error node\n    const error = await driver.wait(\n      until.elementLocated(By.css('.alert-danger, .error')), 2_000\n    );\n    errorText = (await error.getText()).toLowerCase();\n  } catch {\n    // C) HTML-5 bubble (form never posted)\n    await driver.sleep(500);\n    errorText = await page.firstName.getAttribute('value')\n      ? 'html5 block'\n      : '';\n  }\n}\n/* ---------- assertions ---------- */\nexpect(errorText).to.not.equal(''); // some blocker appeared\nif (errorText !== 'html5 block' && tc.msg) {\n  expect(errorText).to.include(tc.msg);\n}",
              "err": {},
              "uuid": "d64e1872-e398-4efb-bee5-c24ebb1b97e7",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-04 – Last name missing",
              "fullTitle": "Sign-up page TC-04 – Last name missing",
              "timedOut": false,
              "duration": 552,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/* ---------- data ---------- */\nlet data = tc.mutate ? tc.mutate(buildBaseData()) : buildBaseData();\n/* ---------- populate form ---------- */\nif (tc.id === 7) {\n  await page.fillMandatory({ ...data, pw: 'Qwerty#123' });\n  await page.confirmPassword.clear();\n} else if (tc.id === 9) {\n  await page.fillMandatory({ ...data, pw: data.pw });\n  await page.confirmPassword.clear();\n  await page.confirmPassword.sendKeys('Qwerty#124');\n} else if (tc.id < 8) {\n  await page.fillMandatory(data);\n} else {\n  await page.fillAll(data);\n}\nawait page.submit();\n/* ---------- capture validation ---------- */\nlet errorText = '';\ntry {\n  // A) JavaScript alert\n  await driver.wait(until.alertIsPresent(), 2_000);\n  const alertBox = await driver.switchTo().alert();\n  errorText = (await alertBox.getText()).toLowerCase();\n  await alertBox.accept();\n} catch {\n  try {\n    // B) inline error node\n    const error = await driver.wait(\n      until.elementLocated(By.css('.alert-danger, .error')), 2_000\n    );\n    errorText = (await error.getText()).toLowerCase();\n  } catch {\n    // C) HTML-5 bubble (form never posted)\n    await driver.sleep(500);\n    errorText = await page.firstName.getAttribute('value')\n      ? 'html5 block'\n      : '';\n  }\n}\n/* ---------- assertions ---------- */\nexpect(errorText).to.not.equal(''); // some blocker appeared\nif (errorText !== 'html5 block' && tc.msg) {\n  expect(errorText).to.include(tc.msg);\n}",
              "err": {
                "message": "AssertionError: expected 'first name must be filled out' to include 'last'",
                "estack": "AssertionError: expected 'first name must be filled out' to include 'last'\n    at Context.<anonymous> (tests\\signUp.tests.js:131:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "a782fe35-a705-43fe-be26-87e7cc751186",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-05 – Email missing",
              "fullTitle": "Sign-up page TC-05 – Email missing",
              "timedOut": false,
              "duration": 431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* ---------- data ---------- */\nlet data = tc.mutate ? tc.mutate(buildBaseData()) : buildBaseData();\n/* ---------- populate form ---------- */\nif (tc.id === 7) {\n  await page.fillMandatory({ ...data, pw: 'Qwerty#123' });\n  await page.confirmPassword.clear();\n} else if (tc.id === 9) {\n  await page.fillMandatory({ ...data, pw: data.pw });\n  await page.confirmPassword.clear();\n  await page.confirmPassword.sendKeys('Qwerty#124');\n} else if (tc.id < 8) {\n  await page.fillMandatory(data);\n} else {\n  await page.fillAll(data);\n}\nawait page.submit();\n/* ---------- capture validation ---------- */\nlet errorText = '';\ntry {\n  // A) JavaScript alert\n  await driver.wait(until.alertIsPresent(), 2_000);\n  const alertBox = await driver.switchTo().alert();\n  errorText = (await alertBox.getText()).toLowerCase();\n  await alertBox.accept();\n} catch {\n  try {\n    // B) inline error node\n    const error = await driver.wait(\n      until.elementLocated(By.css('.alert-danger, .error')), 2_000\n    );\n    errorText = (await error.getText()).toLowerCase();\n  } catch {\n    // C) HTML-5 bubble (form never posted)\n    await driver.sleep(500);\n    errorText = await page.firstName.getAttribute('value')\n      ? 'html5 block'\n      : '';\n  }\n}\n/* ---------- assertions ---------- */\nexpect(errorText).to.not.equal(''); // some blocker appeared\nif (errorText !== 'html5 block' && tc.msg) {\n  expect(errorText).to.include(tc.msg);\n}",
              "err": {},
              "uuid": "669750ac-4d38-45c4-beaf-98d2fdf9eb54",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-06 – Password missing",
              "fullTitle": "Sign-up page TC-06 – Password missing",
              "timedOut": false,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* ---------- data ---------- */\nlet data = tc.mutate ? tc.mutate(buildBaseData()) : buildBaseData();\n/* ---------- populate form ---------- */\nif (tc.id === 7) {\n  await page.fillMandatory({ ...data, pw: 'Qwerty#123' });\n  await page.confirmPassword.clear();\n} else if (tc.id === 9) {\n  await page.fillMandatory({ ...data, pw: data.pw });\n  await page.confirmPassword.clear();\n  await page.confirmPassword.sendKeys('Qwerty#124');\n} else if (tc.id < 8) {\n  await page.fillMandatory(data);\n} else {\n  await page.fillAll(data);\n}\nawait page.submit();\n/* ---------- capture validation ---------- */\nlet errorText = '';\ntry {\n  // A) JavaScript alert\n  await driver.wait(until.alertIsPresent(), 2_000);\n  const alertBox = await driver.switchTo().alert();\n  errorText = (await alertBox.getText()).toLowerCase();\n  await alertBox.accept();\n} catch {\n  try {\n    // B) inline error node\n    const error = await driver.wait(\n      until.elementLocated(By.css('.alert-danger, .error')), 2_000\n    );\n    errorText = (await error.getText()).toLowerCase();\n  } catch {\n    // C) HTML-5 bubble (form never posted)\n    await driver.sleep(500);\n    errorText = await page.firstName.getAttribute('value')\n      ? 'html5 block'\n      : '';\n  }\n}\n/* ---------- assertions ---------- */\nexpect(errorText).to.not.equal(''); // some blocker appeared\nif (errorText !== 'html5 block' && tc.msg) {\n  expect(errorText).to.include(tc.msg);\n}",
              "err": {},
              "uuid": "25f78d45-2aac-4204-8738-a97c579b16d7",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-07 – Confirm password missing",
              "fullTitle": "Sign-up page TC-07 – Confirm password missing",
              "timedOut": false,
              "duration": 526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* ---------- data ---------- */\nlet data = tc.mutate ? tc.mutate(buildBaseData()) : buildBaseData();\n/* ---------- populate form ---------- */\nif (tc.id === 7) {\n  await page.fillMandatory({ ...data, pw: 'Qwerty#123' });\n  await page.confirmPassword.clear();\n} else if (tc.id === 9) {\n  await page.fillMandatory({ ...data, pw: data.pw });\n  await page.confirmPassword.clear();\n  await page.confirmPassword.sendKeys('Qwerty#124');\n} else if (tc.id < 8) {\n  await page.fillMandatory(data);\n} else {\n  await page.fillAll(data);\n}\nawait page.submit();\n/* ---------- capture validation ---------- */\nlet errorText = '';\ntry {\n  // A) JavaScript alert\n  await driver.wait(until.alertIsPresent(), 2_000);\n  const alertBox = await driver.switchTo().alert();\n  errorText = (await alertBox.getText()).toLowerCase();\n  await alertBox.accept();\n} catch {\n  try {\n    // B) inline error node\n    const error = await driver.wait(\n      until.elementLocated(By.css('.alert-danger, .error')), 2_000\n    );\n    errorText = (await error.getText()).toLowerCase();\n  } catch {\n    // C) HTML-5 bubble (form never posted)\n    await driver.sleep(500);\n    errorText = await page.firstName.getAttribute('value')\n      ? 'html5 block'\n      : '';\n  }\n}\n/* ---------- assertions ---------- */\nexpect(errorText).to.not.equal(''); // some blocker appeared\nif (errorText !== 'html5 block' && tc.msg) {\n  expect(errorText).to.include(tc.msg);\n}",
              "err": {},
              "uuid": "9654ae5e-51d7-41b8-97a2-ea8553b4a9c8",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-08 – Email invalid format",
              "fullTitle": "Sign-up page TC-08 – Email invalid format",
              "timedOut": false,
              "duration": 5588,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* ---------- data ---------- */\nlet data = tc.mutate ? tc.mutate(buildBaseData()) : buildBaseData();\n/* ---------- populate form ---------- */\nif (tc.id === 7) {\n  await page.fillMandatory({ ...data, pw: 'Qwerty#123' });\n  await page.confirmPassword.clear();\n} else if (tc.id === 9) {\n  await page.fillMandatory({ ...data, pw: data.pw });\n  await page.confirmPassword.clear();\n  await page.confirmPassword.sendKeys('Qwerty#124');\n} else if (tc.id < 8) {\n  await page.fillMandatory(data);\n} else {\n  await page.fillAll(data);\n}\nawait page.submit();\n/* ---------- capture validation ---------- */\nlet errorText = '';\ntry {\n  // A) JavaScript alert\n  await driver.wait(until.alertIsPresent(), 2_000);\n  const alertBox = await driver.switchTo().alert();\n  errorText = (await alertBox.getText()).toLowerCase();\n  await alertBox.accept();\n} catch {\n  try {\n    // B) inline error node\n    const error = await driver.wait(\n      until.elementLocated(By.css('.alert-danger, .error')), 2_000\n    );\n    errorText = (await error.getText()).toLowerCase();\n  } catch {\n    // C) HTML-5 bubble (form never posted)\n    await driver.sleep(500);\n    errorText = await page.firstName.getAttribute('value')\n      ? 'html5 block'\n      : '';\n  }\n}\n/* ---------- assertions ---------- */\nexpect(errorText).to.not.equal(''); // some blocker appeared\nif (errorText !== 'html5 block' && tc.msg) {\n  expect(errorText).to.include(tc.msg);\n}",
              "err": {},
              "uuid": "a313227e-1844-4827-9e4a-e814c1813c27",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-09 – Password mismatch",
              "fullTitle": "Sign-up page TC-09 – Password mismatch",
              "timedOut": false,
              "duration": 638,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* ---------- data ---------- */\nlet data = tc.mutate ? tc.mutate(buildBaseData()) : buildBaseData();\n/* ---------- populate form ---------- */\nif (tc.id === 7) {\n  await page.fillMandatory({ ...data, pw: 'Qwerty#123' });\n  await page.confirmPassword.clear();\n} else if (tc.id === 9) {\n  await page.fillMandatory({ ...data, pw: data.pw });\n  await page.confirmPassword.clear();\n  await page.confirmPassword.sendKeys('Qwerty#124');\n} else if (tc.id < 8) {\n  await page.fillMandatory(data);\n} else {\n  await page.fillAll(data);\n}\nawait page.submit();\n/* ---------- capture validation ---------- */\nlet errorText = '';\ntry {\n  // A) JavaScript alert\n  await driver.wait(until.alertIsPresent(), 2_000);\n  const alertBox = await driver.switchTo().alert();\n  errorText = (await alertBox.getText()).toLowerCase();\n  await alertBox.accept();\n} catch {\n  try {\n    // B) inline error node\n    const error = await driver.wait(\n      until.elementLocated(By.css('.alert-danger, .error')), 2_000\n    );\n    errorText = (await error.getText()).toLowerCase();\n  } catch {\n    // C) HTML-5 bubble (form never posted)\n    await driver.sleep(500);\n    errorText = await page.firstName.getAttribute('value')\n      ? 'html5 block'\n      : '';\n  }\n}\n/* ---------- assertions ---------- */\nexpect(errorText).to.not.equal(''); // some blocker appeared\nif (errorText !== 'html5 block' && tc.msg) {\n  expect(errorText).to.include(tc.msg);\n}",
              "err": {},
              "uuid": "2bfe8436-4e63-4a5f-ac7a-98214c0682d6",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-10 – Phone invalid chars",
              "fullTitle": "Sign-up page TC-10 – Phone invalid chars",
              "timedOut": false,
              "duration": 5790,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* ---------- data ---------- */\nlet data = tc.mutate ? tc.mutate(buildBaseData()) : buildBaseData();\n/* ---------- populate form ---------- */\nif (tc.id === 7) {\n  await page.fillMandatory({ ...data, pw: 'Qwerty#123' });\n  await page.confirmPassword.clear();\n} else if (tc.id === 9) {\n  await page.fillMandatory({ ...data, pw: data.pw });\n  await page.confirmPassword.clear();\n  await page.confirmPassword.sendKeys('Qwerty#124');\n} else if (tc.id < 8) {\n  await page.fillMandatory(data);\n} else {\n  await page.fillAll(data);\n}\nawait page.submit();\n/* ---------- capture validation ---------- */\nlet errorText = '';\ntry {\n  // A) JavaScript alert\n  await driver.wait(until.alertIsPresent(), 2_000);\n  const alertBox = await driver.switchTo().alert();\n  errorText = (await alertBox.getText()).toLowerCase();\n  await alertBox.accept();\n} catch {\n  try {\n    // B) inline error node\n    const error = await driver.wait(\n      until.elementLocated(By.css('.alert-danger, .error')), 2_000\n    );\n    errorText = (await error.getText()).toLowerCase();\n  } catch {\n    // C) HTML-5 bubble (form never posted)\n    await driver.sleep(500);\n    errorText = await page.firstName.getAttribute('value')\n      ? 'html5 block'\n      : '';\n  }\n}\n/* ---------- assertions ---------- */\nexpect(errorText).to.not.equal(''); // some blocker appeared\nif (errorText !== 'html5 block' && tc.msg) {\n  expect(errorText).to.include(tc.msg);\n}",
              "err": {},
              "uuid": "7c832767-5dff-4a3d-9e21-6d358fa31b4f",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-11 – DOB wrong format",
              "fullTitle": "Sign-up page TC-11 – DOB wrong format",
              "timedOut": false,
              "duration": 5719,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/* ---------- data ---------- */\nlet data = tc.mutate ? tc.mutate(buildBaseData()) : buildBaseData();\n/* ---------- populate form ---------- */\nif (tc.id === 7) {\n  await page.fillMandatory({ ...data, pw: 'Qwerty#123' });\n  await page.confirmPassword.clear();\n} else if (tc.id === 9) {\n  await page.fillMandatory({ ...data, pw: data.pw });\n  await page.confirmPassword.clear();\n  await page.confirmPassword.sendKeys('Qwerty#124');\n} else if (tc.id < 8) {\n  await page.fillMandatory(data);\n} else {\n  await page.fillAll(data);\n}\nawait page.submit();\n/* ---------- capture validation ---------- */\nlet errorText = '';\ntry {\n  // A) JavaScript alert\n  await driver.wait(until.alertIsPresent(), 2_000);\n  const alertBox = await driver.switchTo().alert();\n  errorText = (await alertBox.getText()).toLowerCase();\n  await alertBox.accept();\n} catch {\n  try {\n    // B) inline error node\n    const error = await driver.wait(\n      until.elementLocated(By.css('.alert-danger, .error')), 2_000\n    );\n    errorText = (await error.getText()).toLowerCase();\n  } catch {\n    // C) HTML-5 bubble (form never posted)\n    await driver.sleep(500);\n    errorText = await page.firstName.getAttribute('value')\n      ? 'html5 block'\n      : '';\n  }\n}\n/* ---------- assertions ---------- */\nexpect(errorText).to.not.equal(''); // some blocker appeared\nif (errorText !== 'html5 block' && tc.msg) {\n  expect(errorText).to.include(tc.msg);\n}",
              "err": {
                "message": "AssertionError: expected '' to not equal ''",
                "estack": "AssertionError: expected '' to not equal ''\n    at Context.<anonymous> (tests\\signUp.tests.js:129:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": ""
              },
              "uuid": "895a7f25-566a-4155-8a4a-bf88185ed741",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-12 – GitHub invalid URL",
              "fullTitle": "Sign-up page TC-12 – GitHub invalid URL",
              "timedOut": false,
              "duration": 5737,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* ---------- data ---------- */\nlet data = tc.mutate ? tc.mutate(buildBaseData()) : buildBaseData();\n/* ---------- populate form ---------- */\nif (tc.id === 7) {\n  await page.fillMandatory({ ...data, pw: 'Qwerty#123' });\n  await page.confirmPassword.clear();\n} else if (tc.id === 9) {\n  await page.fillMandatory({ ...data, pw: data.pw });\n  await page.confirmPassword.clear();\n  await page.confirmPassword.sendKeys('Qwerty#124');\n} else if (tc.id < 8) {\n  await page.fillMandatory(data);\n} else {\n  await page.fillAll(data);\n}\nawait page.submit();\n/* ---------- capture validation ---------- */\nlet errorText = '';\ntry {\n  // A) JavaScript alert\n  await driver.wait(until.alertIsPresent(), 2_000);\n  const alertBox = await driver.switchTo().alert();\n  errorText = (await alertBox.getText()).toLowerCase();\n  await alertBox.accept();\n} catch {\n  try {\n    // B) inline error node\n    const error = await driver.wait(\n      until.elementLocated(By.css('.alert-danger, .error')), 2_000\n    );\n    errorText = (await error.getText()).toLowerCase();\n  } catch {\n    // C) HTML-5 bubble (form never posted)\n    await driver.sleep(500);\n    errorText = await page.firstName.getAttribute('value')\n      ? 'html5 block'\n      : '';\n  }\n}\n/* ---------- assertions ---------- */\nexpect(errorText).to.not.equal(''); // some blocker appeared\nif (errorText !== 'html5 block' && tc.msg) {\n  expect(errorText).to.include(tc.msg);\n}",
              "err": {},
              "uuid": "08745917-38f3-4528-b0d1-75d79703386e",
              "parentUUID": "303ee45e-3da7-442a-886d-c2842d34039b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8551f522-ceff-4a44-bc43-abac94eb911d",
            "d64e1872-e398-4efb-bee5-c24ebb1b97e7",
            "669750ac-4d38-45c4-beaf-98d2fdf9eb54",
            "25f78d45-2aac-4204-8738-a97c579b16d7",
            "9654ae5e-51d7-41b8-97a2-ea8553b4a9c8",
            "a313227e-1844-4827-9e4a-e814c1813c27",
            "2bfe8436-4e63-4a5f-ac7a-98214c0682d6",
            "7c832767-5dff-4a3d-9e21-6d358fa31b4f",
            "08745917-38f3-4528-b0d1-75d79703386e"
          ],
          "failures": [
            "9f70d228-66b2-4b5e-bdc7-440cf4d78ce4",
            "a782fe35-a705-43fe-be26-87e7cc751186",
            "895a7f25-566a-4155-8a4a-bf88185ed741"
          ],
          "pending": [],
          "skipped": [],
          "duration": 27709,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}